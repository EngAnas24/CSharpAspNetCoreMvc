@model BookLibrary.ViewModels.BookAuthorViewModel
@inject BookLibrary.Models.Data.IDataHelper<BookLibrary.Models.Author> author;
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>BookAuthorViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            @if(ViewBag.Message != null)
            {
                <h5 class="alert alert-danger">@ViewBag.Message</h5>
            }
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="File" class="control-label"></label>
                <input type="file" asp-for="File"  name="File" class="form-control" />
                <span asp-validation-for="File" class="text-danger"></span>
            </div>
             <div class="form-group">
                <select asp-for="AuthorNameList" class="form-control" asp-items="@(new SelectList(author.GetData().Select(x=>x.AuthorName)))">
            </select>
                <span asp-validation-for="AuthorId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
